{% from "_common/util.jinja" import is_docker with context %}

{% macro redis_master_id(ip, port, container_id=None) -%}
{% if container_id is defined -%}
{{ salt['docker.run'](container_id, 'redis-cli -h ' + ip + ' -p ' + port|string + ' CLUSTER MYID') }}
{% else -%}
{{ salt['cmd.run']('redis-cli -h ' + ip + ' -p ' + port|string + ' CLUSTER MYID') }}
{% endif -%}
{%- endmacro %}

{% macro redis_configure(redis, bind, discriminator, service) -%}

redis_config_{{ bind.ip }}_{{ bind.port }}:
  file_ext.managed:
    - name: /etc/redis/{{ discriminator }}.conf
    - source: {{ redis.config.source }}
    - makedirs: True
    - template: jinja
    - context:
      bind: {{ bind|json_decode_dict }}
      redis: {{ redis|json_decode_dict }}
      discriminator: {{ discriminator }}
      pid_file: {{ discriminator }}
    - require:
      - file_ext: {{ redis.config.init_location }}
{% if salt['grains.get']("init") != 'systemd' %}
  file.symlink:
    - name: /etc/init.d/{{ discriminator }}
    - target: {{ redis.config.init_location }}
    - require:
      - file_ext: /etc/redis/{{ discriminator }}.conf
    - watch_in:
      - service: {{ service }}
{% endif %}
  service.running:
    - name: {{ service }}
{% if not is_docker() %}
    - enable: True
{% endif %}
    - watch:
      - file_ext: /etc/redis/{{ discriminator }}.conf
{%- endmacro %}
