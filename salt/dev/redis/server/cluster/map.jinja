{% from "redis/server/single/map.jinja" import redis as redis_single with context %}

{# host_id == hostname by default #}
{% set host_id = salt['grains.get']('id') %}

{% set redis = salt['grains.filter_by']({
    'Debian': {
        'total_slots': '16384',
        'masters': [{
          'id': host_id,
          'ip': '127.0.0.1',
          'port': 6379,
        }],
        'slaves': [{
          'id': host_id,
          'master_id': host_id,
          'master_ip': '127.0.0.1',
          'master_port': 6379,
          'ip': '127.0.0.1',
          'port': 6380,
        }],
    },
}, merge=salt['pillar.get']('redis')) %}

{% do redis.update(redis_single) %}

{# fill ip addresses #}
{% for master in redis.masters|selectattr('ip', 'undefined') %}
{% set master_ip = salt['mine.get'](tgt=master.id, fun='network.ip_addrs') %}
{% do master.update({ "ip": master_ip[master.id][0] }) %}
{% endfor %}

{% for slave in redis.slaves|selectattr('ip', 'undefined') %}
{% set slave_ip = salt['mine.get'](tgt=slave.id, fun='network.ip_addrs') %}
{% do slave.update({ "ip": slave_ip[slave.id][0] }) %}
{% endfor %}

{% for slave in redis.slaves|selectattr('master_ip', 'undefined') %}
{% set master_ip = salt['mine.get'](tgt=slave.master_id, fun='network.ip_addrs') %}
{% do slave.update({ "master_ip": master_ip[slave.master_id][0] }) %}
{% endfor %}
