{% macro add_environmental_variable(var_name, var_value, exports_file) %}
  {% if grains['os'] != 'Windows' %}
  file.append:
    - name: {{ exports_file }}
    - text: export {{ var_name }}={{ var_value }}
  {% else %}
  environ.setenv:
    - name: {{ var_name }}
    - value: {{ var_value }}
  {% endif %}
{% endmacro %}

{% macro add_to_path(environ_variable, path_inside, exports_file) %}
  envops.manage_path:
    - name: {{ environ_variable }}
    - directory_inside: {{ path_inside }}
    - exports_file: {{ exports_file }}
{% endmacro %}

{% macro link_to_bin(link_location, target_link, owner) %}
  file.symlink:
    - name: {{ link_location }}
    - target: {{ target_link }}
    - user: {{ owner }}
    - makedirs: True
{% endmacro %}

{% macro repo_pkg_service(state_id, conf_dict, run=True) %}
{{ state_id }}:
{% if conf_dict.repo_entries is defined or conf_dict.repo_id is defined %}
  pkgrepo.managed:
{% if conf_dict.repo_entries is defined %}
    - names: {{ conf_dict.repo_entries|json_decode_list }}
    - file: {{ conf_dict.file }}
    - key_url: {{ conf_dict.key_url }}
{% else %}
    - name: {{ conf_dict.repo_id }}
    - baseurl: {{ conf_dict.baseurl }}
    - humanname: {{ conf_dict.repo_id }}
    - gpgcheck: 1
    - gpgkey: {{ conf_dict.gpgkey }}
{% endif %}
    - require:
      - pkg: os_packages
    - require_in:
      - pkg: {{ conf_dict.pkg_name }}
{% endif %}
  pkg.latest:
    - name: {{ conf_dict.pkg_name }}
    - refresh: True
    - require:
      - pkg: os_packages
{% if run %}
  service.running:
    - name: {{ conf_dict.service_name }}
    - enable: True
    - require:
      - pkg: {{ conf_dict.pkg_name }}
{% endif %}
{% endmacro %}
