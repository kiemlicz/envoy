{% macro add_environmental_variable(var_name, var_value, exports_file) %}
  {% if grains['os'] != 'Windows' %}
  file.append:
    - name: {{ exports_file }}
    - text: export {{ var_name }}={{ var_value }}
  {% else %}
  environ.setenv:
    - name: {{ var_name }}
    - value: {{ var_value }}
  {% endif %}
{% endmacro %}

{% macro add_to_path(environ_variable, path_inside, exports_file) %}
  envops.manage_path:
    - name: {{ environ_variable }}
    - directory_inside: {{ path_inside }}
    - exports_file: {{ exports_file }}
{% endmacro %}

{% macro link_to_bin(link_location, target_link, owner) %}
  file.symlink:
    - name: {{ link_location }}
    - target: {{ target_link }}
    - user: {{ owner }}
    - makedirs: True
{% endmacro %}

{% macro redis_master_id(host, port) -%}
{{ salt['cmd.run']('redis-cli -h ' + host + ' -p ' + port|string + ' CLUSTER MYID') }}
{%- endmacro %}

{% macro redis_configure(host, port, config, init_location, service_name) -%}
{% set instance = service_name + '-' + port %}
{% set service = service_name + '@' + instance %}
redis_config_{{ host }}_{{ port }}:
  file_ext.managed:
    - name: /etc/redis/{{ instance }}.conf
    - source: {{ config }}
    - makedirs: True
    - template: jinja
    - context:
      bind:
        host: {{ host }}
        port: {{ port }}
        service_name: {{ service_name }}
    - require:
      - file_ext: {{ init_location }}
{% if salt['grains.get']("init") != 'systemd' %}
{% set service = instance %}
  file.symlink:
    - name: /etc/init.d/{{ instance }}
    - target: {{ init_location }}
    - require:
      - file_ext: /etc/redis/{{ instance }}.conf
    - require_in:
      - service: {{ service }}
{% endif %}
  service.running:
    - name: {{ service }}
{% if salt['grains.get']("virtual_subtype") != "Docker" %}
    - enable: True
{% endif %}
    - require:
      - file_ext: /etc/redis/{{ instance }}.conf
{%- endmacro %}

{% macro redis_install(pkg_name, init, init_location, required_pkg) -%}
redis_pkg:
  pkg.latest:
    - name: {{ pkg_name }}
    - refresh: True
    - require:
      - pkg: {{ required_pkg }}
  file_ext.managed:
    - name: {{ init_location }}
    - source: {{ init }}
    - require:
      - pkg: {{ pkg_name }}
{%- endmacro %}
