{% macro mongodb_configure(mongodb, bind, discriminator) -%}

{% set service = mongodb.service + '@' + bind.port|string %}

mongodb_config_{{ bind.ip }}_{{ bind.port }}:
  file_ext.managed:
    - name: /etc/{{ discriminator }}.conf
    - source: {{ mongodb.config.source }}
    - makedirs: True
    - template: jinja
    - context:
      bind: {{ bind }}
      mongodb: {{ mongodb }}
      discriminator: {{ discriminator }}
    - require:
      - file_ext: {{ mongodb.init_location }}
  file.directory:
    - names:
      - {{ mongodb.config.db_path }}/{{ discriminator }}
      - {{ mongodb.config.pid_path }}
      - {{ mongodb.config.log_path }}
    - user: {{ mongodb.user }}
    - group: {{ mongodb.group }}
    - makedirs: True
    - require:
      - file_ext: /etc/{{ discriminator }}.conf

mongodb_start_{{ bind.ip }}_{{ bind.port }}:
{% if salt['grains.get']("init") != 'systemd' %}
{% set service = discriminator %}
  file.symlink:
    - name: /etc/init.d/{{ discriminator }}
    - target: {{ mongodb.init_location }}
    - require:
      - file: mongodb_config_{{ bind.ip }}_{{ bind.port }}
    - watch_in:
      - service: {{ service }}
{% endif %}
  service.running:
    - name: {{ service }}
{% if salt['grains.get']("virtual_subtype") != "Docker" %}
    - enable: True
{% endif %}
    - require:
      - file: mongodb_config_{{ bind.ip }}_{{ bind.port }}
{%- endmacro %}

{# deprecated #}
{% macro mongodb_docker_prerequisites(mongodb) -%}
mongo_in_docker_prerequisites:
  pkg.latest:
    - name: mongo_os_packages_requisites
    - pkgs: {{ mongodb.prerequisites }}
    - require:
      - pkg: os_packages
  pip.installed:
    - name: mongodb_pip_prerequisites
    - pkgs: {{ mongodb.pip_packages }}
    - reload_modules: True
    - require:
      - pkg: mongo_os_packages_requisites
{%- endmacro %}

{% macro mongodb_docker(mongodb, bind) -%}
mongodb_config_{{ bind.ip }}_{{ bind.port }}:
  file_ext.managed:
    - name: /usr/local/share/mongodb/{{ bind.ip }}_{{ bind.port }}/{{ mongodb.service }}.conf
    - source: {{ mongodb.config.source }}
    - makedirs: True
    - template: jinja
    - context:
      bind: {{ bind }}
      mongodb: {{ mongodb }}
    - require:
      - pip: mongodb_pip_prerequisites

mongodb_dockerfile_{{ bind.ip }}_{{ bind.port }}:
  file_ext.managed:
    - name: /usr/local/share/mongodb/{{ bind.ip }}_{{ bind.port }}/Dockerfile
    - source: {{ mongodb.dockerfile }}
    - template: jinja
    - context:
      mongodb: {{ mongodb }}
    - makedirs: True
    - require:
      - file_ext: /usr/local/share/mongodb/{{ bind.ip }}_{{ bind.port }}/{{ mongodb.service }}.conf

mongodb_{{ bind.ip }}_{{ bind.port }}:
  docker_image.present:
    - name: {{ mongodb.image }}_{{ bind.ip }}_{{ bind.port }}
    - build: /usr/local/share/mongodb/{{ bind.ip }}_{{ bind.port }}/
    - require:
      - file_ext: /usr/local/share/mongodb/{{ bind.ip }}_{{ bind.port }}/Dockerfile
  docker_container.running:
    - name: mongodb_{{ bind.ip }}_{{ bind.port }}
    - image: {{ mongodb.image }}_{{ bind.ip }}_{{ bind.port }}
{% if salt['grains.get']("virtual_subtype") == "Docker" %}
    - network_mode: host
{% else %}
    {% for host in mongodb.bind_addresses %}
    - port_bindings:
      - {{ host }}:{{ mongodb.bind_port }}:{{ mongodb.container_port }}
    {% endfor %}
{% endif %}
    - require:
      - docker_image: {{ mongodb.image }}_{{ bind.ip }}_{{ bind.port }}
{%- endmacro %}
